{
  "name": "armory",
  "version": "0.5.0",
  "description": "A simple wrapper for the WoW Armory API.",
  "keywords": [
    "wow",
    "warcraft",
    "armory",
    "api",
    "blizzard"
  ],
  "bugs": {
    "url": "https://github.com/xtian/node-armory/issues"
  },
  "author": {
    "name": "Christian Wesselhoeft",
    "email": "christian@cwesselhoeft.com"
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/xtian/node-armory.git"
  },
  "dependencies": {
    "request": "~2"
  },
  "devDependencies": {
    "tap": "~0.2.0",
    "jshint": "~0.5.0",
    "wowhead": "~0.1.0"
  },
  "scripts": {
    "test": "make test"
  },
  "engines": [
    "node >= 0.4.0"
  ],
  "readme": "# node-armory\n\nA simple [node.js](http://github.com/joyent/node) wrapper around Blizzard's [REST API for World of Warcraft](http://blizzard.github.com/api-wow-docs/).\n\n## Installation\n\n    npm install armory\n    npm install wowhead  # optional\n\nIf the [wowhead](http://github.com/xtian/node-wowhead) module is installed, it will be used as a fallback [when item requests fail](http://us.battle.net/wow/en/forum/topic/3657606329).\n\n\n## Documentation\n\n\nExcept for the static APIs, all options objects can have the following properties:\n\n* `name`|`id`\n* `lastModified` _(optional)_\n* `locale` _(optional)_\n* `region`\n\nNote: `name` and `id` are interchangeable, and `locale` and `lastModified` do not affect all API methods.\n\n***\n### auction(options, callback)\nRetrieves an array of auction data URLs.\n\n### auctionData(options, callback)\nRetrieves an object of data from the first auction data URL provided by the API.\n\n    armory.auctionData({ name: 'Shadowmoon', region: 'us' }, function(err, res) {\n\n        var agiPots = res.alliance.auctions.filter(function(auction) {\n            return auction.item === 58145;\n        });\n    });\n\n[Auction API Documentation](http://blizzard.github.com/api-wow-docs/#id3381986)\n\n\n***\n### arena(options, callback)\nRetrieves an object containing data about an arena team.\n\n    armory.arena({\n        name: 'No Dairy',\n        size: '2v2',\n        realm: 'Shadowmoon',\n        region: 'us'\n\n    }, function(err, team) {\n        var ratio = team.gamesWon / team.gamesLost;\n    });\n\nAdditional options:\n\n* `realm`\n* `size`\n\n[Arena Team API Documentation](http://blizzard.github.com/api-wow-docs/#id3382144)\n\n***\n### character(options, callback)\nRetrieves an object containing data about a character.\n### guild(options, callback)\nRetrieves an object containing data about a guild.\n\n    var armory = require('armory').defaults({\n        realm: 'Shadowmoon',\n        region: 'us'\n    });\n\n    armory.guild({\n        name: 'The Gentlemens Club',\n        fields: ['members']\n\n    }, function(err, guild) {\n\n        var dwarvenHairColors = [];\n\n        guild.members.filter(function(member) {\n            return member.character.race === 3;\n\n        }).map(function(member) {\n            return member.character.name;\n\n        }).forEach(function(dwarf) {\n            armory.character({\n                name: dwarf,\n                fields: ['appearance']\n\n            }, function(err, character) {\n                hairColors.push(character.appearance.hairColor);\n            });\n        });\n    });\n\nAdditional options:\n\n* `fields` _(optional)_: must be an array\n* `realm`\n\n[Character API Documentation](http://blizzard.github.com/api-wow-docs/#id3380312)\n\n[Guild API Documentation](http://blizzard.github.com/api-wow-docs/#id3381560)\n\n\n***\n### defaults(options)\nReturns a new instance of the module where all options will default to the provided values. If the first argument of a method is a number or string, it will be used as the `name` option.\n\n    var armory = require('armory').defaults({\n        name: 'Dargonaut',\n        realm: 'Shadowmoon',\n        region: 'us'\n    });\n\n    armory.character(function(err, character) {\n        console.log(character.name);\n    });\n\n    armory.character('Dewbaca', function(err, character) {\n        console.log(character.name);\n    });\n\n    armory.character({\n        name: 'Talent',\n        realm: 'Lightbringer'\n\n    }, function(err, character) {\n        console.log(character.name);\n    });\n\n\n***\n### item(options, callback)\nRetrieves an object containing data about an item.\n### quest(options, callback)\nRetrieves an object containing data about a quest.\n### recipe(options, callback)\nRetrieves an object containing data about a recipe.\n\n    var armory = require('armory').defaults({ region: 'us' });\n\n    var avgILvl = 0,\n        i = 0;\n\n    [28275, 27903, 28041].forEach(function(id) {\n        armory.item(id, function(err, item) {\n            avgILvl += item.itemLevel;\n            i++;\n\n            if (i === 3) {\n                avgILvl /= 3;\n            }\n        });\n    });\n\nAdditional options:\n\n* `fallback`: Setting to `false` disables Wowhead fallback.\n\n[Item API Documentation](http://blizzard.github.com/api-wow-docs/#id3382086)\n\n\n***\n### ladder(options, callback)\nRetrieves an array of objects containing data about arena teams for the given ladder and battlegroup.\n\n    armory.ladder({\n        id: '2v2',\n        battlegroup: 'Vindication',\n        region: 'us'\n\n    }, function(err, ladder) {\n\n        var factionCount = ladder.reduce(function(array, team) {\n            array[team.side === 'alliance' ? 0 : 1]++;\n            return array;\n        }, [0, 0]);\n    });\n\nAdditional options:\n\n* `battlegroup`\n\n\n***\n### realmStatus(options, callback)\nRetrieves an array containing the status of one or more realms.\n\n    armory.realmStatus({ region: 'us' }, function(err, realms) {\n\n        var queued = realms.filter(function(realm) {\n            return realm.queue;\n        });\n    });\n\nA single realm name or an array of realm names can be passed. If no names are provided, the status of all realms will be returned.\n\n[Realm Status API Documentation](http://blizzard.github.com/api-wow-docs/#id3381933)\n\n\n***\n### battlegroups(options, callback)\nRetrieves a static array of all battlegroup names.\n### characterAchievements(options, callback)\nRetrieves a static array of all character achievements.\n### classes(options, callback)\nRetrieves a static array of data about character classes.\n### guildAchievements(options, callback)\nRetrieves a static array of all guild achievements.\n### perks(options, callback)\nRetrieves a static array of data about guild perks.\n### races(options, callback)\nRetrieves a static array of data about character races.\n### rewards(options, callback)\nRetrieves a static array of data about guild rewards.\n\n    armory.classes({ region: 'us', locale: 'es_MX' }, function(err, res) {\n        console.log('Yo puede jugar un ' + res[9].name);\n    });\n\n`id` and `name` are not used by these methods.\n\n[Data API Documentation](http://blizzard.github.com/api-wow-docs/#id3382202)\n\n\n***\n### Properties\n#### publicKey, privateKey\nKeys to use for generating an authorization header.\n\n[Authentication Documentation](http://blizzard.github.com/api-wow-docs/#id3379854)\n\n\n### Notes on usage:\n\n* If an error occurs (including API errors), it will be passed as an Error object to the first argument of the callback with its message in the `message` property. Otherwise, the API response will passed as the second argument.\n* `lastModified` must be a GMT Unix timestamp. If the requested resource has not been modified since the time of `lastModifed`, the callback will be invoked with both arguments empty.\n* [Locale documentation](http://blizzard.github.com/api-wow-docs/#id3379677).\n",
  "readmeFilename": "README.md",
  "_id": "armory@0.5.0",
  "dist": {
    "shasum": "a73354a957bf036d21e47d73b206ce66d757e6e9"
  },
  "_from": "armory"
}
